/**
 * */

var map,Map, plotDraw, plotEdit, drawOverlay, drawStyle;

var center = [ 117.648920, 39.034450 ];

function init(){
	
	$('#webmenu li').hover(function(){

		$(this).children('ul').stop(true,true).show('slow');

	},function(){

		$(this).children('ul').stop(true,true).hide('slow');

	});

	

	$('#webmenu li').hover(function(){

		$(this).children('div').stop(true,true).show('slow');

	},function(){

		$(this).children('div').stop(true,true).hide('slow');

	});
    map=Map.map;
    
    map.on('click', function(e){
        if(plotDraw.isDrawing()){
            return;
        }
        var feature = map.forEachFeatureAtPixel(e.pixel, function (feature, layer) {
            return feature;
        });
        if(feature){
        	if(feature.get('name')||feature.get('features').length>0){
        		return
        	}
            // 开始编辑
            plotEdit.activate(feature);
            activeDelBtn();
        }else{
            // 结束编辑
            plotEdit.deactivate();
            deactiveDelBtn();
        }
    });

    // 初始化标绘绘制工具，添加绘制结束事件响应
    plotDraw = new P.PlotDraw(map);
    plotDraw.on(P.Event.PlotDrawEvent.DRAW_END, onDrawEnd, false, this);

    // 初始化标绘编辑工具
    plotEdit = new P.PlotEdit(map);

    // 设置标绘符号显示的默认样式
    var stroke = new ol.style.Stroke({
        color: '#FF0000',
        width: 2
    });
    var fill = new ol.style.Fill({color: 'rgba(0,255,0,0.4)'});
    var image = new ol.style.Circle({fill: fill, stroke: stroke, radius: 8});
    drawStyle = new ol.style.Style({image: image, fill:fill, stroke:stroke});

    // 绘制好的标绘符号，添加到FeatureOverlay显示。
    drawOverlay = new ol.layer.Vector({
        source: new ol.source.Vector()
    });
    drawOverlay.setStyle(drawStyle);
    drawOverlay.setMap(map);

    get('btn-delete').onclick = function(){
        if(drawOverlay && plotEdit && plotEdit.activePlot){
            drawOverlay.getSource().removeFeature(plotEdit.activePlot);
            plotEdit.deactivate();
            deactiveDelBtn();
        }
    };

    // 初始化加载一个扇形标绘符号
//    var sector = new P.PlotFactory.createPlot(P.PlotTypes.SECTOR, [center, [3439054.77660665,1814920.7996032247], [3693437.2067397167,914798.3545169891]]);
//    var feature = new ol.Feature({
//        geometry: sector
//    });
//    drawOverlay.getSource().addFeature(feature);
  //添加文字删除
   
    
}

// 绘制结束后，添加到FeatureOverlay显示。
function onDrawEnd(event){
    var feature = event.feature;
    drawOverlay.getSource().addFeature(feature);
    // 开始编辑
    plotEdit.activate(feature);
    activeDelBtn();
}

// 指定标绘类型，开始绘制。
function activate(type){
    plotEdit.deactivate();
    plotDraw.activate(type);
};

function showAbout(){
    document.getElementById("aboutContainer").style.visibility = "visible";
}

function hideAbout(){
    document.getElementById("aboutContainer").style.visibility = "hidden";
}

function get(domId){
    return document.getElementById(domId);
}

function activeDelBtn(This){
    get('btn-delete').style.display = 'inline-block';
    if(This){
    	 $('#btn-delete').click(function(){
    	    	$(This).remove();
    	    	deactiveDelBtn();
    	    })
    }else{
    	This=false;
    }
   
}

function deactiveDelBtn(){
    get('btn-delete').style.display = 'none';
}

