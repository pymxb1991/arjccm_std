<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.arjjs.ccm.modules.pbs.activity.dao.PbsActinotificationsDao">

	<sql id="pbsActinotificationsColumns">
		a.id AS "id",
		a.s_activityid AS "sActivityid.id",
		rec.s_title AS "sActivityid.sTitle",
		a.s_type AS "sType",
		a.s_content AS
		"sContent",
		a.s_acceptorid AS "sAcceptorid.id",
		mem.s_name AS
		"sAcceptorid.sName",
		mem.s_photo AS "sAcceptorid.sPhoto",
		a.s_stat AS
		"sStat",
		a.s_description AS "sDescription",
		a.s_url AS "sUrl",
		a.s_spare01 AS "sSpare01",
		a.s_spare02 AS "sSpare02",
		a.s_spare03 AS
		"sSpare03",
		a.s_spare04 AS "sSpare04",
		a.create_by AS
		"createBy.id",
		a.create_date AS "createDate",
		a.update_by AS
		"updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS
		"delFlag"
	</sql>

	<sql id="pbsActinotificationsJoins">
		LEFT JOIN pbs_partymem mem ON mem.id = a.s_acceptorid
		LEFT
		JOIN pbs_activityrec rec ON a.s_activityid = rec.id
	</sql>

	<select id="get" resultType="PbsActinotifications">
		SELECT
		<include refid="pbsActinotificationsColumns" />
		FROM pbs_actinotifications a
		<include refid="pbsActinotificationsJoins" />
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="PbsActinotifications">
		SELECT
		<include refid="pbsActinotificationsColumns" />
		FROM pbs_actinotifications a
		<include refid="pbsActinotificationsJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			and rec.del_flag =#{DEL_FLAG_NORMAL}
			<if
				test="sActivityid != null and sActivityid != '' and sActivityid.id != null and sActivityid.id != ''">
				AND a.s_activityid = #{sActivityid.id}
			</if>
			<if
				test="sActivityid != null and sActivityid != '' and sActivityid.sTitle != null and sActivityid.sTitle != ''">
				AND rec.s_title LIKE CONCAT('%',#{sActivityid.sTitle},'%')
			</if>
			<if test="sType != null and sType != ''">
				AND a.s_type = #{sType}
			</if>
			<if
				test="sAcceptorid != null and sAcceptorid != '' and sAcceptorid.id != null and sAcceptorid.id != ''">
				AND a.s_acceptorid = #{sAcceptorid.id}
			</if>
			<if test="sStat != null and sStat != ''">
				AND a.s_stat = #{sStat}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="PbsActinotifications">
		SELECT
		<include refid="pbsActinotificationsColumns" />
		FROM pbs_actinotifications a
		<include refid="pbsActinotificationsJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO pbs_actinotifications(
		id,
		s_activityid,
		s_type,
		s_content,
		s_acceptorid,
		s_stat,
		s_description,
		s_url,
		s_spare01,
		s_spare02,
		s_spare03,
		s_spare04,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag
		) VALUES (
		#{id},
		#{sActivityid.id},
		#{sType},
		#{sContent},
		#{sAcceptorid.id},
		#{sStat},
		#{sDescription},
		#{sUrl},
		#{sSpare01},
		#{sSpare02},
		#{sSpare03},
		#{sSpare04},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{remarks},
		#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE pbs_actinotifications SET
		s_activityid =
		#{sActivityid.id},
		s_type = #{sType},
		s_content = #{sContent},
		s_acceptorid = #{sAcceptorid.id},
		s_stat = #{sStat},
		s_description =
		#{sDescription},
		s_url = #{sUrl},
		s_spare01 = #{sSpare01},
		s_spare02 =
		#{sSpare02},
		s_spare03 = #{sSpare03},
		s_spare04 = #{sSpare04},
		update_by
		= #{updateBy.id},
		update_date = #{updateDate},
		remarks = #{remarks}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE pbs_actinotifications SET
		del_flag =
		#{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="DeleteByActivityid">
		UPDATE pbs_actinotifications SET
		del_flag =
		#{DEL_FLAG_DELETE}
		WHERE s_activityid = #{id}
	</update>

	<insert id="insertAll" parameterType="List">
		INSERT INTO pbs_actinotifications(
		id,
		s_activityid,
		s_type,
		s_content,
		s_acceptorid,
		s_stat,
		s_description,
		s_url,
		s_spare01,
		s_spare02,
		s_spare03,
		s_spare04,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag
		)
		<if test="list.get(0).dbName == 'mssql' or list.get(0).dbName == 'mysql'">
			VALUES
			<foreach collection="list" item="e" open="" separator=","
				close="">
				(#{e.id},
				#{e.sActivityid.id},
				#{e.sType},
				#{e.sContent},
				#{e.sAcceptorid.id},
				#{e.sStat},
				#{e.sDescription},
				#{e.sUrl},
				#{e.sSpare01},
				#{e.sSpare02},
				#{e.sSpare03},
				#{e.sSpare04},
				#{e.createBy.id},
				#{e.createDate},
				#{e.updateBy.id},
				#{e.updateDate},
				#{e.remarks},
				#{e.delFlag} )
			</foreach>
		</if>
	</insert>

	<update id="updatesStat">
		UPDATE pbs_actinotifications SET
		s_stat = #{sStat}
		WHERE s_activityid = #{sActivityid.id}
		and s_acceptorid = #{sAcceptorid.id}
	</update>
</mapper>