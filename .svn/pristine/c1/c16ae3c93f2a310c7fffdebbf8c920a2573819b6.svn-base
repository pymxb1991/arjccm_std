/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.arjjs.ccm.modules.ccm.fence.web;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.arjjs.ccm.common.config.Global;
import com.arjjs.ccm.common.persistence.Page;
import com.arjjs.ccm.common.web.BaseController;
import com.arjjs.ccm.common.utils.StringUtils;
import com.arjjs.ccm.modules.ccm.fence.entity.CcmElectronicFence;
import com.arjjs.ccm.modules.ccm.fence.service.CcmElectronicFenceService;
import com.arjjs.ccm.tool.CommUtil;

/**
 * 电子围栏实体类Controller
 * @author lgh
 * @version 2019-05-31
 */
@Controller
@RequestMapping(value = "${adminPath}/fence/ccmElectronicFence")
public class CcmElectronicFenceController extends BaseController {

	@Autowired
	private CcmElectronicFenceService ccmElectronicFenceService;
	
	@ModelAttribute
	public CcmElectronicFence get(@RequestParam(required=false) String id) {
		CcmElectronicFence entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = ccmElectronicFenceService.get(id);
		}
		if (entity == null){
			entity = new CcmElectronicFence();
		}
		return entity;
	}
	
	@RequiresPermissions("fence:ccmElectronicFence:view")
	@RequestMapping(value = {"list", ""})
	public String list(CcmElectronicFence ccmElectronicFence, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<CcmElectronicFence> page = ccmElectronicFenceService.findPage(new Page<CcmElectronicFence>(request, response), ccmElectronicFence); 
		model.addAttribute("page", page);
		return "ccm/fence/ccmElectronicFenceList";
	}

	@RequiresPermissions("fence:ccmElectronicFence:view")
	@RequestMapping(value = "form")
	public String form(CcmElectronicFence ccmElectronicFence, Model model) {
		model.addAttribute("ccmElectronicFence", ccmElectronicFence);
		return "ccm/fence/ccmElectronicFenceForm";
	}

	@RequiresPermissions("fence:ccmElectronicFence:edit")
	@RequestMapping(value = "save")
	public void save(CcmElectronicFence ccmElectronicFence, Model model, RedirectAttributes redirectAttributes, HttpServletResponse response) {
		/*
		 * if (!beanValidator(model, ccmElectronicFence)){ return
		 * form(ccmElectronicFence, model); }
		 */
		ccmElectronicFenceService.save(ccmElectronicFence);
		PrintWriter out = null;
		try {
			out = response.getWriter();
		} catch (IOException e) {
			e.printStackTrace();
		}
		CommUtil.openWinExpDiv(out, "保存电子围栏成功");
	
	}
	
	@RequiresPermissions("fence:ccmElectronicFence:edit")
	@RequestMapping(value = "delete")
	public String delete(CcmElectronicFence ccmElectronicFence, RedirectAttributes redirectAttributes) {
		ccmElectronicFenceService.delete(ccmElectronicFence);
		addMessage(redirectAttributes, "删除电子围栏成功");
		return "redirect:"+Global.getAdminPath()+"/fence/ccmElectronicFence/?repage";
	}

}