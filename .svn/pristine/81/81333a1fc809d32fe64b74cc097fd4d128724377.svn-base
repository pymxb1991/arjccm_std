/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.arjjs.ccm.modules.cms.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.arjjs.ccm.common.config.Global;
import com.arjjs.ccm.common.persistence.Page;
import com.arjjs.ccm.common.web.BaseController;
import com.arjjs.ccm.common.utils.StringUtils;
import com.arjjs.ccm.modules.cms.entity.CcmFontUser;
import com.arjjs.ccm.modules.cms.service.CcmFontUserService;
import com.arjjs.ccm.tool.PasswordUtils;

/**
 * 居民用户管理Controller
 * @author liuxue
 * @version 2018-10-15
 */
@Controller
@RequestMapping(value = "${adminPath}/cms/ccmFontUser")
public class CcmFontUserController extends BaseController {

	@Autowired
	private CcmFontUserService ccmFontUserService;
	
	@ModelAttribute
	public CcmFontUser get(@RequestParam(required=false) String id) {
		CcmFontUser entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = ccmFontUserService.get(id);
		}
		if (entity == null){
			entity = new CcmFontUser();
		}
		return entity;
	}
	
	
	
	
	@RequiresPermissions("cms:ccmFontUser:view")
	@RequestMapping(value = {"list", ""})
	public String list(CcmFontUser ccmFontUser, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<CcmFontUser> page = ccmFontUserService.findPage(new Page<CcmFontUser>(request, response), ccmFontUser); 
		model.addAttribute("page", page);
		return "modules/cms/ccmFontUserList";
	}

	@RequiresPermissions("cms:ccmFontUser:view")
	@RequestMapping(value = "form")
	public String form(CcmFontUser ccmFontUser, Model model) {
		model.addAttribute("ccmFontUser", ccmFontUser);
		return "modules/cms/ccmFontUserForm";
	}
    
	
	
	
	@RequiresPermissions("cms:ccmFontUser:edit")
	@RequestMapping(value = "save")
	public String save(CcmFontUser ccmFontUser, Model model, RedirectAttributes redirectAttributes) {
		if (!beanValidator(model, ccmFontUser)){
			return form(ccmFontUser, model);
		}
		if(StringUtils.isNotBlank(ccmFontUser.getNewPassword())){
			ccmFontUser.setPassword(PasswordUtils.createPassword(ccmFontUser.getNewPassword()));
		}
		if(ccmFontUserService.getByLoginName(ccmFontUser)!=null){
			addMessage(redirectAttributes, "该登录名已存在");
		}else{
			ccmFontUserService.save(ccmFontUser);
			addMessage(redirectAttributes, "保存居民用户管理成功");
		}	
		
		return "redirect:"+Global.getAdminPath()+"/cms/ccmFontUser/?repage";
	}
	
	@RequiresPermissions("cms:ccmFontUser:edit")
	@RequestMapping(value = "delete")
	public String delete(CcmFontUser ccmFontUser, RedirectAttributes redirectAttributes) {
		ccmFontUserService.delete(ccmFontUser);
		addMessage(redirectAttributes, "删除居民用户管理成功");
		return "redirect:"+Global.getAdminPath()+"/cms/ccmFontUser/?repage";
	}

}