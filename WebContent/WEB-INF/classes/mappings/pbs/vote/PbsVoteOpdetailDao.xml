<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.arjjs.ccm.modules.pbs.vote.dao.PbsVoteOpdetailDao">

	<sql id="pbsVoteOpdetailColumns">
		a.id AS "id",
		a.s_topic AS "sTopic",
		a.s_subject AS
		"sSubject",
		a.s_item AS "sItem",
		a.userid AS "user.id",
		a.s_ip AS "sIp",
		a.s_spare01 AS "sSpare01",
		a.s_spare02 AS "sSpare02",
		a.s_spare03 AS
		"sSpare03",
		a.s_spare04 AS "sSpare04",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS
		"delFlag",
		topic.s_name AS "sTopicName",
		item.s_name AS "sItemName",
		sub.s_name AS "sSubjectName",
		u8.name AS "user.name"
	</sql>

	<sql id="pbsVoteOpdetailJoins">
		LEFT JOIN pbs_vote_subject sub ON sub.id =a.s_subject
		LEFT
		JOIN pbs_vote_topic topic ON topic.id =a.s_topic
		LEFT JOIN
		pbs_vote_item item ON item.id = a.s_item
		LEFT JOIN sys_user u8 ON u8.id
		= a.userid
	</sql>

	<select id="get" resultType="PbsVoteOpdetail">
		SELECT
		<include refid="pbsVoteOpdetailColumns" />
		FROM pbs_vote_opdetail a
		<include refid="pbsVoteOpdetailJoins" />
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="PbsVoteOpdetail">
		SELECT
		<include refid="pbsVoteOpdetailColumns" />
		FROM pbs_vote_opdetail a
		<include refid="pbsVoteOpdetailJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="sItem != null and sItem != ''">
				AND a.s_item = #{sItem}
			</if>
			<if test="user != null and user.name != null and user.name != ''">
				AND u8.name like concat('%',#{user.name},'%')
			</if>
			<if test="user != null and user.id != null and user.id != ''">
				AND u8.id = #{user.id}
			</if>
			<if test="sSubject != null and sSubject != null ">
				AND a.s_subject = #{sSubject}
			</if>
			<if test="sTopic != null and sTopic != null ">
				AND a.s_topic = #{sTopic}
			</if>
			<if test="sSubjectName != null and sSubjectName != null ">
				AND sub.s_name like concat('%',#{sSubjectName},'%')
			</if>
			<if test="sIp != null and sIp != ''">
				AND a.s_ip LIKE CONCAT('%', #{sIp},'%')
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="PbsVoteOpdetail">
		SELECT
		<include refid="pbsVoteOpdetailColumns" />
		FROM pbs_vote_opdetail a
		<include refid="pbsVoteOpdetailJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO pbs_vote_opdetail(
		id,
		s_topic,
		s_subject,
		s_item,
		userid,
		s_ip,
		s_spare01,
		s_spare02,
		s_spare03,
		s_spare04,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag
		) VALUES (
		#{id},
		#{sTopic},
		#{sSubject},
		#{sItem},
		#{user.id},
		#{sIp},
		#{sSpare01},
		#{sSpare02},
		#{sSpare03},
		#{sSpare04},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{remarks},
		#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE pbs_vote_opdetail SET
		s_topic = #{sTopic},
		s_subject = #{sSubject},
		s_item = #{sItem},
		userid = #{user.id},
		s_ip =
		#{sIp},
		s_spare01 = #{sSpare01},
		s_spare02 = #{sSpare02},
		s_spare03 =
		#{sSpare03},
		s_spare04 = #{sSpare04},
		update_by = #{updateBy.id},
		update_date = #{updateDate},
		remarks = #{remarks}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE pbs_vote_opdetail SET
		del_flag =
		#{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


	<insert id="insertAll" parameterType="List">
		INSERT INTO pbs_vote_opdetail(
		id,
		s_topic,
		s_subject,
		s_item,
		userid,
		s_ip,
		s_spare01,
		s_spare02,
		s_spare03,
		s_spare04,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag
		)
		VALUES
		<foreach collection="list" item="e" open="" separator=","
			close="">
			(#{e.id},
			#{e.sTopic},
			#{e.sSubject},
			#{e.sItem},
			#{e.user.id},
			#{e.sIp},
			#{e.sSpare01},
			#{e.sSpare02},
			#{e.sSpare03},
			#{e.sSpare04},
			#{e.createBy.id},
			#{e.createDate},
			#{e.updateBy.id},
			#{e.updateDate},
			#{e.remarks},
			#{e.delFlag} )
		</foreach>
	</insert>
</mapper>